plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
	id "org.sonarqube" version "2.8"
	id 'jacoco'
	id "com.gorylenko.gradle-git-properties" version "2.2.0"
	id 'com.google.cloud.tools.jib' version '1.8.0'
}

group = 'name.stepin'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'
defaultTasks('bootRun')

bootJar {
	archivesBaseName = 'api'
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	compile "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	compile "io.micrometer:micrometer-registry-prometheus:${micrometerRegistryPrometheusVersion}"
	compile "io.springfox:springfox-swagger2:${springfoxVersion}"
	compile "io.springfox:springfox-bean-validators:${springfoxVersion}"
	compile "io.springfox:springfox-swagger-ui:${springfoxVersion}"
	compile "com.graphql-java:graphql-spring-boot-starter:${graphqlStarterVersion}"
	compile "com.graphql-java:graphql-java-tools:${graphqlToolsVersion}"
	compile "com.graphql-java:graphiql-spring-boot-starter:${graphiqlStarterVersion}"
	testCompile "com.graphql-java:graphql-spring-boot-test-autoconfigure:${graphqlTestStarterVersion}"
}

compileJava {
	options.annotationProcessorPath = configurations.annotationProcessor

	// if you need to configure mapstruct component model
	options.compilerArgs << "-Amapstruct.defaultComponentModel=spring"

	options.setAnnotationProcessorGeneratedSourcesDirectory( file("$projectDir/src/generated/java"))
}

jacoco {
	toolVersion = "0.8.5"
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}

jib.to.image = "stepin/spring-template-app:${version}"
jib.to.tags = ['latest']

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}
